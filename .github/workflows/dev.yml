name: Development Environment

on:
  push:
    branches:
    - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: infra-ci-kekdao
        status: BUILD STARTED
        color: warning

    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache dependencies
      id: node-cache
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build
      env:
        CI: false
        HTTPS: true
        GENERATE_SOURCEMAP: false
        SKIP_PREFLIGHT_CHECK: true
        REACT_APP_ENV: 'development'
        REACT_APP_HTML_TITLE: 'Universe Rinkeby'
        REACT_APP_WEB3_CHAIN_ID: 4
        REACT_APP_WEB3_POLLING_INTERVAL: 12000
        REACT_APP_WEB3_RPC_WSS_URL: 'wss://rinkeby.infura.io/ws/v3/25763b5ba15644a8b3079d3ee755bce5'
        REACT_APP_WEB3_RPC_HTTPS_URL: 'https://rinkeby.infura.io/v3/25763b5ba15644a8b3079d3ee755bce5'
        REACT_APP_WEB3_PORTIS_APP_ID: '88597a67-b066-4b66-ad9b-e9262d8716f6'
        REACT_APP_WEB3_WALLET_CONNECT_BRIDGE: 'https://bridge.walletconnect.org'
        REACT_APP_WEB3_COINBASE_APP_NAME: 'universe.xyz'
        REACT_APP_WEB3_TREZOR_EMAIL: 'cezar@universe.xyz'
        REACT_APP_WEB3_TREZOR_APP_URL: 'https://universe.xyz/'
        REACT_APP_ETHERSCAN_API_KEY: '4RSJUUZQFMXUAUUJP5FI5UR5U59N7UIA32'
        REACT_APP_TOKEN_XYZ_ADDR: '0x86dEddCFc3a7DBeE68cDADA65Eed3D3b70F4fe24'
        REACT_APP_TOKEN_USDC_ADDR: '0x1F719D2Ea53b9F7ee4dBFE51B0D91e892A05AA26'
        REACT_APP_TOKEN_BOND_ADDR: '0xdf695cf3118d504c33415cbc465dd469b7e4c881'
        REACT_APP_TOKEN_AAVE_ADDR: '0x7bdf7a5ab7a18985d1b1cb09b69338ba0c78f416'
        REACT_APP_TOKEN_COMP_ADDR: '0xfdf1a271f12148e11254dd63178ee1fbb8b4c75e'
        REACT_APP_TOKEN_SNX_ADDR: '0xff85fe0a2e8d66b9101305ab1522a37e0a50c4ef'
        REACT_APP_TOKEN_SUSHI_ADDR: '0xf3461cd59e3a3c25fd5f4c471df724a74cec4eeb'
        REACT_APP_TOKEN_LINK_ADDR: '0x2b9781477b64e48a263854B778d548Fc9560CbB5'
        REACT_APP_TOKEN_ILV_ADDR: '0x449ae80a139e724dd2506b8b312e898bf713fea9'
        REACT_APP_TOKEN_USDC_XYZ_SLP_ADDR: '0xfade438388f1fc3b1030c58bafdc91bfad162d4f'
        REACT_APP_CONTRACT_YF_STAKING_ADDR: '0xc248B3EEDB8FBa2530aDC3ed570B0dE01FE107f8'
        REACT_APP_CONTRACT_YF_BOND_ADDR: '0xEE716d0F925020e0E85e9708536E96A10dE41b81'
        REACT_APP_CONTRACT_YF_AAVE_ADDR: '0x82E483978Bb3Fb7564ee4a07B8F325f03295AeD5'
        REACT_APP_CONTRACT_YF_COMP_ADDR: '0xCcCF9B1852374769e8D749b60b7D43FDbb34D0Ef'
        REACT_APP_CONTRACT_YF_SNX_ADDR: '0x59b8f6672592DbEc33e77eEbDC6Fb06D0E027bFb'
        REACT_APP_CONTRACT_YF_SUSHI_ADDR: '0x7600611850B18F571a4e587C6aED6511f2d47A95'
        REACT_APP_CONTRACT_YF_LINK_ADDR: '0xD5711C36822Efb3A4277b4Dd182205845B9db39d'
        REACT_APP_CONTRACT_YF_ILV_ADDR: '0x858438818B2350ff67fb9A841Fa8520164834cd6'
        REACT_APP_CONTRACT_YF_USDC_XYZ_SLP_ADDR: '0xB9b101Ddc05755FA933AA55000Cf379dB7b6f724'
        REACT_APP_CONTRACT_DAO_GOVERNANCE_ADDR: '0x0C47c7425Bf2C2b2bae6644145E1Aa734425ED05'
        REACT_APP_CONTRACT_DAO_BARN_ADDR: '0xFa7f183d5DDe994a908CA1969c50AE7538b60D8d'
        REACT_APP_CONTRACT_DAO_REWARD_ADDR: '0x0D9d63fad7d25D6daA749cb57149f47c7800A975'
        REACT_APP_BASE_API_URL: 'https://dev.api.dao.universe.xyz'
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: build

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: BUILD SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: BUILD FAILED
        color: danger

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: infra-ci-kekdao
        status: DEPLOYMENT STARTED
        color: warning

    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend

    - name: Configure AWS credetials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy static site to S3
      run: ls -l && aws s3 sync . s3://dev-devdaouniversexyz-origin --delete

    - name: Invalidate CloudFront cache
      run: |
        #!/usr/bin/env bash
        set -eou pipefail

        CF_DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items!=null] | [?contains(Aliases.Items, 'dev.dao.universe.xyz')].Id | [0]" | tr -d \")
        echo "Clearing cache for ${CF_DIST_ID}..."
        CF_INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/*" | jq -r '.Invalidation.Id')
        while [ $(aws cloudfront get-invalidation --distribution-id ${CF_DIST_ID} --id ${CF_INVALIDATION_ID} | jq -r '.Invalidation.Status') != "Completed" ]; do
          echo "CF_DIST_ID=${CF_DIST_ID} CF_INVALIDATION_ID=${CF_INVALIDATION_ID}: Waiting for CloudFront cache invalidation to complete..."
          sleep 5
        done

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: DEPLOYMENT SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: DEPLOYMENT FAILED
        color: danger
